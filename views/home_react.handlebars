<html>
<head>
    <title>React App Demo</title>

    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
</head>

<body>

<div id="root"></div>
<script type="text/babel">

const EmpList = (props) => {
  return <div>
  <h2>Employees List:</h2>
  <h3><i>Click a list to see the detail</i></h3>  
  <ul>
  {props.emps.map(item => <li onClick={props.clickHandler} key={item.name}>{item.name}</li>)}
  </ul>
  </div>
}

const EmpDetail = (props) => {
  return <div>
    <h3>Employee Detail:</h3>
    <p>Name: {props.emp.name}</p>
    <p>Age: {props.emp.age}</p>
    <p>Company: {props.emp.company}</p>
    <p>Position: {props.emp.position}</p>
    </div>
}

class App extends React.Component{
  constructor(props){
    super(props);
    // Set initial state using data from server application
    this.state = {
      emp: {{{emps}}},
      currEmp: { } // current selected item
    };
    //This binding in necessary to make 'this' work in the callback
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick(e) {
    let name = e.target.innerText;
    let newEmp = this.state.emp.find((item) => {
      return item.name == name;
    })

    this.setState({
      currEmp : newEmp
    });
  }

  render() {
    // render app UI elements
    return (
      <div>
      <EmpList emps={this.state.emp} clickHandler={this.handleClick} />
      <EmpDetail emp={this.state.currEmp}/>
      </div>
    );
  }
}

ReactDOM.render(<App />, document.getElementById('root'));
</script>
</body>
</html>